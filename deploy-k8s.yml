---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactfront
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reactfront
  template:
    metadata:
      labels:
        app: reactfront
    spec:
      containers:
      - name: reactfront
        image: superheatedboy/reactfront:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        ports:
        - containerPort: 3000
        command: ["npm", "start"]
        tty: true
---
apiVersion: v1
kind: Service
metadata:
  name: reactfront
spec:
  type: NodePort
  selector:
    app: reactfront
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: reactfront


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customers
  template:
    metadata:
      labels:
        app: customers
    spec:
      containers:
      - name: customers
        image: superheatedboy/customers:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        command: ["npm", "start"]
---
apiVersion: v1
kind: Service
metadata:
  name: customers
spec:
  type: NodePort
  selector:
    app: customers
  ports:
    - port: 3002
      targetPort: 3002
      protocol: TCP
      name: customers


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: histories
spec:
  replicas: 1
  selector:
    matchLabels:
      app: histories
  template:
    metadata:
      labels:
        app: histories
    spec:
      containers:
      - name: histories
        image: superheatedboy/histories:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3005
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        - name: REDIS_HOST
          value: histories-redis
        - name: REDIS_PORT
          value: 6379
        command: ["npm", "start"]
---
apiVersion: v1
kind: Service
metadata:
  name: histories
spec:
  type: NodePort
  selector:
    app: histories
  ports:
    - port: 3005
      targetPort: 3005
      protocol: TCP
      name: histories

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: histories-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: histories-redis
  template:
    metadata:
      labels:
        app: histories-redis
    spec:
      containers:
      - name: histories-redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: histories-redis
spec:
  type: NodePort
  selector:
    app: histories-redis
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: histories-redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
  template:
    metadata:
      labels:
        app: reviews
    spec:
      containers:
      - name: reviews
        image: superheatedboy/reviews:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3003
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        command: ["npm", "start"]
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
spec:
  type: NodePort
  selector:
    app: reviews
  ports:
    - port: 3003
      targetPort: 3003
      protocol: TCP
      name: reviews


---
#cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox-sleep
spec:
  containers:
  - name: busybox
    image: busybox
    args:
    - sleep
    - "3600"
#EOF
